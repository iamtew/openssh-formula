{%- set sshd_config = pillar.get('sshd_config', {}) -%}
{#- present in sshd_config and known in actual file options -#}
{%- set processed_options = [] -%}

{#- generic renderer used for sshd matches, known options, -#}
{#- and unknown options -#}
{%- macro render_option(keyword, default, config_dict=sshd_config) -%}
  {%- set value = config_dict.get(keyword, default) -%}
  {%- if value is sameas true -%}
{{ keyword }} yes
  {%- elif value is sameas false -%}
{{ keyword }} no
  {%- elif value is string or value is number -%}
{{ keyword }} {{ value }}
  {%- else -%}
{%- for single_value in value -%}
{{ keyword }} {{ single_value }}
{% endfor -%}
  {%- endif -%}
{%- endmacro -%}

{#- macros for render option according to present -#}
{%- macro option_impl(keyword, default, present) -%}
  {%- if present -%}
    {%- do processed_options.append(keyword) -%}
    {%- set prefix='' -%}
  {%- else -%}
    {%- set prefix='#' -%}
  {%- endif -%}
  {#- add prefix to keyword -#}
  {%- set keyword = prefix ~ keyword -%}
{{ render_option(keyword, default) }}
{%- endmacro -%}

{#- macros for render option commented by default -#}
{%- macro option(keyword, default, present) -%}
{{ option_impl(keyword, default, keyword in sshd_config) }}
{%- endmacro -%}

{#- macros for render option uncommented by default -#}
{%- macro option_default_uncommented(keyword, default, present) -%}
{{ option_impl(keyword, default, True) }}
{%- endmacro -%}

# This file is managed by salt. Manual changes risk being overwritten.
# The contents of the original sshd_config are kept on the bottom for
# quick reference.


# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
{{ option('Port', 22) }}
{{ option('AddressFamily', 'any') }}
{{ option('ListenAddress', ['::', '0.0.0.0']) -}}

# The default requires explicit activation of protocol 1
{{ option('Protocol', 2) }}

# HostKeys for protocol version 1
{{ option('HostKey', ['/etc/ssh/ssh_host_key']) -}}
# HostKeys for protocol version 2
{{ option_default_uncommented('HostKey', ['/etc/ssh/ssh_host_rsa_key', '/etc/ssh/ssh_host_dsa_key', '/etc/ssh/ssh_host_ecdsa_key']) -}}

# Lifetime and size of ephemeral version 1 server key
{{ option('KeyRegenerationInterval', '1h') }}
{{ option('ServerKeyBits', 1024) }}

# Ciphers and keying
{{ option('RekeyLimit', 'default none') }}

# Logging
# obsoletes QuietMode and FascistLogging
{{ option('SyslogFacility', 'AUTH') }}
{{ option_default_uncommented('SyslogFacility', 'AUTHPRIV') }}
{{ option('LogLevel', 'INFO') }}

# Authentication:

{{ option('LoginGraceTime', '2m') }}
{{ option('PermitRootLogin', 'yes') }}
{{ option('StrictModes', 'yes') }}
{{ option('MaxAuthTries', 6) }}
{{ option('MaxSessions', 10) }}

{{ option('DSAAuthentication', 'yes') }}
{{ option('RSAAuthentication', 'yes') }}
{{ option('PubkeyAuthentication', 'yes') }}

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
{{ option_default_uncommented('AuthorizedKeysFile', '%h/.ssh/authorized_keys') }}

{{ option('AuthorizedPrincipalsFile', 'none') }}

{{ option('AuthorizedKeysCommand', 'none') }}
{{ option('AuthorizedKeysCommandUser', 'nobody') }}

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
{{ option('RhostsRSAAuthentication', 'no') }}
# similar for protocol version 2
{{ option('HostbasedAuthentication', 'no') }}
# Change to yes if you don't trust ~/.ssh/known_hosts for
# RhostsRSAAuthentication and HostbasedAuthentication
{{ option('IgnoreUserKnownHosts', 'no') }}
# Don't read the user's ~/.rhosts and ~/.shosts files
{{ option('IgnoreRhosts', 'yes') }}

# To disable tunneled clear text passwords, change to no here!
{{ option_default_uncommented('PasswordAuthentication', 'yes') }}
{{ option('PermitEmptyPasswords', 'no') }}

# Change to no to disable s/key passwords
{{ option_default_uncommented('ChallengeResponseAuthentication', 'no') }}

# Kerberos options
{{ option('KerberosAuthentication', 'no') }}
{{ option('KerberosOrLocalPasswd', 'yes') }}
{{ option('KerberosTicketCleanup', 'yes') }}
{{ option('KerberosGetAFSToken', 'no') }}
{{ option('KerberosUseKuserok', 'yes') }}

# GSSAPI options
{{ option_default_uncommented('GSSAPIAuthentication', 'yes') }}
{{ option_default_uncommented('GSSAPICleanupCredentials', 'yes') }}
{{ option('GSSAPIStrictAcceptorCheck', 'yes') }}
{{ option('GSSAPIKeyExchange', 'no') }}

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Red Hat Enterprise Linux and may cause several
# problems.
{{ option_default_uncommented('UsePAM', 'yes') }}

{{ option('AllowAgentForwarding', 'yes') }}
{{ option('AllowTcpForwarding', 'yes') }}
{{ option('GatewayPorts', 'no') }}
{{ option_default_uncommented('X11Forwarding', 'yes') }}
{{ option('X11DisplayOffset', 10) }}
{{ option('X11UseLocalhost', 'yes') }}
{{ option('PrintMotd', 'yes') }}
{{ option('PrintLastLog', 'yes') }}
{{ option('TCPKeepAlive', 'yes') }}
{{ option('UseLogin', 'no') }}
{{ option_default_uncommented('UsePrivilegeSeparation', 'sandbox  # Default for new installations.') }}
{{ option('PermitUserEnvironment', 'no') }}
{{ option('Compression', 'delayed') }}
{{ option('ClientAliveInterval', 0) }}
{{ option('ClientAliveCountMax', 3) }}
{{ option('ShowPatchLevel', 'no') }}
{{ option('UseDNS', 'yes') }}
{{ option('PidFile', '/var/run/sshd.pid') }}
{{ option('MaxStartups', '10:30:100') }}
{{ option('PermitTunnel', 'no') }}
{{ option('ChrootDirectory', 'none') }}
{{ option('VersionAddendum', 'none') }}

# no default banner path
{{ option('Banner', 'none') }}

# Allow client to pass locale environment variables
{{ option_default_uncommented('AcceptEnv', 'LANG LC_* XMODIFIERS') }}

# override default of no subsystems
{{ option_default_uncommented('Subsystem', 'sftp /usr/lib/openssh/sftp-server') }}

# Uncomment this if you want to use .local domain
#Host *.local
#	CheckHostIP no

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	ForceCommand cvs server

{# Handling unknown in salt template options #}
{%- for keyword in sshd_config.keys() %}
  {#- Matches have to be at the bottem and should be handled differently -#}
  {%- if not keyword in processed_options and keyword != 'matches' -%}
{#- send a blank default as it doesn't matter -#}
{{ render_option(keyword, '') }}
  {%- endif -%}
{%- endfor %}

{# Handle matches last as they need to go at the bottom #}
{%- if 'matches' in sshd_config %}
  {%- for match in sshd_config['matches'].values() %}
Match {{ match['type'].keys()[0] }} {{ match['type'].values()[0] }}
    {%- for keyword in match['options'].keys() %}
    {{ render_option(keyword, '', config_dict=match['options']) }}
    {%- endfor %}
  {%- endfor %}
{%- endif %}
